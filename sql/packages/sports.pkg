/**********************************************************************
/*
/* Filename: sports.pkg
/* Package: sports
/* Developer: Leo Gruber
/* Description: This package groups procedures/functions 
/*				related to the table sports. It includes 1 procedure.
/*				for DML commands.
/*	
/**********************************************************************/
/

CREATE OR REPLACE PACKAGE pa_sports
as

	PROCEDURE sp_ins_sports (
	l_v_title_in IN VARCHAR2,
	l_n_sportsID_out OUT NUMBER);
	
end;
/






CREATE OR REPLACE PACKAGE BODY pa_sports
as
	g_x_unsuccessful EXCEPTION;
	PRAGMA EXCEPTION_INIT(g_x_unsuccessful, -20101);
	
/*********************************************************************
/**
/** Procedure sp_ins_sports
/** Out: l_n_sportsID_out â€“ the id of the newly created sport.
/**							-1 if unsuccessful
/** In: l_v_title_in - the name of the new sport
/** Developer: Leo Gruber
/** Description: Insert a new sport, by passing the sports title.
/*********************************************************************/

	PROCEDURE sp_ins_sports(
		l_v_title_in IN VARCHAR2,
		l_n_sportsID_out OUT NUMBER
	)
	as
	  l_n_sportsID sports.id%TYPE;
	  x_null_passed EXCEPTION;
	  PRAGMA EXCEPTION_INIT(x_null_passed, -20100);
	begin
		IF l_v_title_in = NULL THEN
			raise_application_error(-20100, 'Title cannot be null');
		END IF;
		INSERT INTO sports (title) 
			VALUES(l_v_title_in) RETURNING id INTO l_n_sportsID;
		l_n_sportsID_out := l_n_sportsID;
		IF SQL%ROWCOUNT = 0 THEN
			raise_application_error(-20101, 'Insert statement failed');
		END IF;
		COMMIT;
		EXCEPTION 
			WHEN x_null_passed OR g_x_unsuccessful THEN
				l_n_sportsID_out := -1;
				pa_logging.sp_ins_error('Exception in sp_ins_sports',SQLCODE);
			WHEN OTHERS THEN
				l_n_sportsID_out := -1;
				pa_logging.sp_ins_error('Unexcpeted Exception in sp_ins_sports',SQLCODE);
	end;
	
	
end;
/